/*
 * Generated by Bluespec Compiler, version 2023.07-33-g1c27a41e (build 1c27a41e)
 * 
 * On Sat May 11 09:54:47 EDT 2024
 * 
 */
#include "bluesim_primitives.h"
#include "mktop_pipelined.h"


/* Literal declarations */
static unsigned int const UWide_literal_68_haaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
									2863311530u,
									10u };
static tUWide const UWide_literal_68_haaaaaaaaaaaaaaaaa(68u,
							UWide_literal_68_haaaaaaaaaaaaaaaaa_arr);


/* String declarations */
static std::string const __str_literal_7("  \033[0;31mFAIL\033[0m (%0d)", 23u);
static std::string const __str_literal_6("  \033[0;32mPASS\033[0m", 17u);
static std::string const __str_literal_3("%0d", 3u);
static std::string const __str_literal_4("%c", 2u);
static std::string const __str_literal_2("ERROR: %m: mkBRAMAdapter overrun", 32u);
static std::string const __str_literal_5("RAN CYCLES", 10u);
static std::string const __str_literal_1("mem.vmh", 7u);


/* Constructor */
MOD_mktop_pipelined::MOD_mktop_pipelined(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_bram_memory(simHdl,
		     "bram_memory",
		     this,
		     __str_literal_1,
		     (tUInt8)0u,
		     30u,
		     32u,
		     8u,
		     4u,
		     1073741824u,
		     (tUInt8)0u,
		     2u),
    INST_bram_serverAdapterA_cnt(simHdl, "bram_serverAdapterA_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_1(simHdl, "bram_serverAdapterA_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_2(simHdl, "bram_serverAdapterA_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_cnt_3(simHdl, "bram_serverAdapterA_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterA_outData_beforeDeq(simHdl,
					       "bram_serverAdapterA_outData_beforeDeq",
					       this,
					       1u,
					       (tUInt8)1u),
    INST_bram_serverAdapterA_outData_beforeEnq(simHdl,
					       "bram_serverAdapterA_outData_beforeEnq",
					       this,
					       1u,
					       (tUInt8)1u),
    INST_bram_serverAdapterA_outData_dequeueing(simHdl,
						"bram_serverAdapterA_outData_dequeueing",
						this,
						0u),
    INST_bram_serverAdapterA_outData_enqw(simHdl,
					  "bram_serverAdapterA_outData_enqw",
					  this,
					  32u,
					  (tUInt8)0u),
    INST_bram_serverAdapterA_outData_ff(simHdl,
					"bram_serverAdapterA_outData_ff",
					this,
					32u,
					3u,
					(tUInt8)0u,
					0u),
    INST_bram_serverAdapterA_s1(simHdl, "bram_serverAdapterA_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterA_s1_1(simHdl, "bram_serverAdapterA_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapterA_writeWithResp(simHdl,
					   "bram_serverAdapterA_writeWithResp",
					   this,
					   2u,
					   (tUInt8)0u),
    INST_bram_serverAdapterB_cnt(simHdl, "bram_serverAdapterB_cnt", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_1(simHdl, "bram_serverAdapterB_cnt_1", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_2(simHdl, "bram_serverAdapterB_cnt_2", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_cnt_3(simHdl, "bram_serverAdapterB_cnt_3", this, 3u, (tUInt8)0u),
    INST_bram_serverAdapterB_outData_beforeDeq(simHdl,
					       "bram_serverAdapterB_outData_beforeDeq",
					       this,
					       1u,
					       (tUInt8)1u),
    INST_bram_serverAdapterB_outData_beforeEnq(simHdl,
					       "bram_serverAdapterB_outData_beforeEnq",
					       this,
					       1u,
					       (tUInt8)1u),
    INST_bram_serverAdapterB_outData_dequeueing(simHdl,
						"bram_serverAdapterB_outData_dequeueing",
						this,
						0u),
    INST_bram_serverAdapterB_outData_enqw(simHdl,
					  "bram_serverAdapterB_outData_enqw",
					  this,
					  32u,
					  (tUInt8)0u),
    INST_bram_serverAdapterB_outData_ff(simHdl,
					"bram_serverAdapterB_outData_ff",
					this,
					32u,
					3u,
					(tUInt8)0u,
					0u),
    INST_bram_serverAdapterB_s1(simHdl, "bram_serverAdapterB_s1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_bram_serverAdapterB_s1_1(simHdl, "bram_serverAdapterB_s1_1", this, 2u, (tUInt8)0u),
    INST_bram_serverAdapterB_writeWithResp(simHdl,
					   "bram_serverAdapterB_writeWithResp",
					   this,
					   2u,
					   (tUInt8)0u),
    INST_cache(simHdl, "cache", this),
    INST_cycle_count(simHdl, "cycle_count", this, 32u, 0u, (tUInt8)0u),
    INST_dreq(simHdl, "dreq", this, 68u),
    INST_ireq(simHdl, "ireq", this, 68u),
    INST_mmioreq(simHdl, "mmioreq", this, 68u, 2u, (tUInt8)1u, 0u),
    INST_rv_core(simHdl, "rv_core", this),
    PORT_RST_N((tUInt8)1u),
    DEF_rv_core_getMMIOReq___d127(68u),
    DEF_rv_core_getDReq___d116(68u),
    DEF_rv_core_getIReq___d105(68u),
    DEF_mmioreq_first____d144(68u),
    DEF_dreq___d120(68u),
    DEF_ireq___d109(68u),
    DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112(68u),
    DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123(68u)
{
  symbol_count = 52u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mktop_pipelined::init_symbols_0()
{
  init_symbol(&symbols[0u], "bram_memory", SYM_MODULE, &INST_bram_memory);
  init_symbol(&symbols[1u], "bram_serverAdapterA_cnt", SYM_MODULE, &INST_bram_serverAdapterA_cnt);
  init_symbol(&symbols[2u], "bram_serverAdapterA_cnt_1", SYM_MODULE, &INST_bram_serverAdapterA_cnt_1);
  init_symbol(&symbols[3u], "bram_serverAdapterA_cnt_2", SYM_MODULE, &INST_bram_serverAdapterA_cnt_2);
  init_symbol(&symbols[4u], "bram_serverAdapterA_cnt_3", SYM_MODULE, &INST_bram_serverAdapterA_cnt_3);
  init_symbol(&symbols[5u],
	      "bram_serverAdapterA_outData_beforeDeq",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_beforeDeq);
  init_symbol(&symbols[6u],
	      "bram_serverAdapterA_outData_beforeEnq",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_beforeEnq);
  init_symbol(&symbols[7u],
	      "bram_serverAdapterA_outData_dequeueing",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_dequeueing);
  init_symbol(&symbols[8u],
	      "bram_serverAdapterA_outData_enqw",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_enqw);
  init_symbol(&symbols[9u],
	      "bram_serverAdapterA_outData_ff",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_outData_ff);
  init_symbol(&symbols[10u], "bram_serverAdapterA_s1", SYM_MODULE, &INST_bram_serverAdapterA_s1);
  init_symbol(&symbols[11u], "bram_serverAdapterA_s1_1", SYM_MODULE, &INST_bram_serverAdapterA_s1_1);
  init_symbol(&symbols[12u],
	      "bram_serverAdapterA_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapterA_writeWithResp);
  init_symbol(&symbols[13u], "bram_serverAdapterB_cnt", SYM_MODULE, &INST_bram_serverAdapterB_cnt);
  init_symbol(&symbols[14u],
	      "bram_serverAdapterB_cnt_1",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_1);
  init_symbol(&symbols[15u],
	      "bram_serverAdapterB_cnt_2",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_2);
  init_symbol(&symbols[16u],
	      "bram_serverAdapterB_cnt_3",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_cnt_3);
  init_symbol(&symbols[17u],
	      "bram_serverAdapterB_outData_beforeDeq",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_beforeDeq);
  init_symbol(&symbols[18u],
	      "bram_serverAdapterB_outData_beforeEnq",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_beforeEnq);
  init_symbol(&symbols[19u],
	      "bram_serverAdapterB_outData_dequeueing",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_dequeueing);
  init_symbol(&symbols[20u],
	      "bram_serverAdapterB_outData_enqw",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_enqw);
  init_symbol(&symbols[21u],
	      "bram_serverAdapterB_outData_ff",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_outData_ff);
  init_symbol(&symbols[22u], "bram_serverAdapterB_s1", SYM_MODULE, &INST_bram_serverAdapterB_s1);
  init_symbol(&symbols[23u], "bram_serverAdapterB_s1_1", SYM_MODULE, &INST_bram_serverAdapterB_s1_1);
  init_symbol(&symbols[24u],
	      "bram_serverAdapterB_writeWithResp",
	      SYM_MODULE,
	      &INST_bram_serverAdapterB_writeWithResp);
  init_symbol(&symbols[25u], "cache", SYM_MODULE, &INST_cache);
  init_symbol(&symbols[26u], "cycle_count", SYM_MODULE, &INST_cycle_count);
  init_symbol(&symbols[27u], "dreq", SYM_MODULE, &INST_dreq);
  init_symbol(&symbols[28u], "ireq", SYM_MODULE, &INST_ireq);
  init_symbol(&symbols[29u], "mmioreq", SYM_MODULE, &INST_mmioreq);
  init_symbol(&symbols[30u], "RL_bram_serverAdapterA_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[31u], "RL_bram_serverAdapterA_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[32u], "RL_bram_serverAdapterA_outData_dequeue", SYM_RULE);
  init_symbol(&symbols[33u], "RL_bram_serverAdapterA_outData_enqueue", SYM_RULE);
  init_symbol(&symbols[34u], "RL_bram_serverAdapterA_overRun", SYM_RULE);
  init_symbol(&symbols[35u], "RL_bram_serverAdapterA_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[36u], "RL_bram_serverAdapterA_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[37u], "RL_bram_serverAdapterB_cnt_finalAdd", SYM_RULE);
  init_symbol(&symbols[38u], "RL_bram_serverAdapterB_moveToOutFIFO", SYM_RULE);
  init_symbol(&symbols[39u], "RL_bram_serverAdapterB_outData_dequeue", SYM_RULE);
  init_symbol(&symbols[40u], "RL_bram_serverAdapterB_outData_enqueue", SYM_RULE);
  init_symbol(&symbols[41u], "RL_bram_serverAdapterB_overRun", SYM_RULE);
  init_symbol(&symbols[42u], "RL_bram_serverAdapterB_s1__dreg_update", SYM_RULE);
  init_symbol(&symbols[43u], "RL_bram_serverAdapterB_stageReadResponseAlways", SYM_RULE);
  init_symbol(&symbols[44u], "RL_requestD", SYM_RULE);
  init_symbol(&symbols[45u], "RL_requestI", SYM_RULE);
  init_symbol(&symbols[46u], "RL_requestMMIO", SYM_RULE);
  init_symbol(&symbols[47u], "RL_responseD", SYM_RULE);
  init_symbol(&symbols[48u], "RL_responseI", SYM_RULE);
  init_symbol(&symbols[49u], "RL_responseMMIO", SYM_RULE);
  init_symbol(&symbols[50u], "RL_tic", SYM_RULE);
  init_symbol(&symbols[51u], "rv_core", SYM_MODULE, &INST_rv_core);
}


/* Rule actions */

void MOD_mktop_pipelined::RL_bram_serverAdapterA_outData_enqueue()
{
  tUInt32 DEF_x__h514;
  tUInt32 DEF_x_wget__h416;
  DEF_x_wget__h416 = INST_bram_serverAdapterA_outData_enqw.METH_wget();
  DEF_x__h514 = DEF_x_wget__h416;
  INST_bram_serverAdapterA_outData_ff.METH_enq(DEF_x__h514);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterA_outData_dequeue()
{
  INST_bram_serverAdapterA_outData_ff.METH_deq();
}

void MOD_mktop_pipelined::RL_bram_serverAdapterA_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapterA_cnt_3_whas__3_THEN_bram_ETC___d23;
  tUInt8 DEF_b__h910;
  tUInt8 DEF_b__h917;
  tUInt8 DEF_b__h954;
  tUInt8 DEF_b__h890;
  DEF_b__h890 = INST_bram_serverAdapterA_cnt_3.METH_wget();
  DEF_b__h954 = INST_bram_serverAdapterA_cnt_2.METH_wget();
  DEF_b__h917 = INST_bram_serverAdapterA_cnt_1.METH_wget();
  DEF_b__h910 = INST_bram_serverAdapterA_cnt.METH_read();
  DEF_bram_serverAdapterA_cnt_3_whas____d13 = INST_bram_serverAdapterA_cnt_3.METH_whas();
  DEF_bram_serverAdapterA_cnt_2_whas____d11 = INST_bram_serverAdapterA_cnt_2.METH_whas();
  DEF_bram_serverAdapterA_cnt_1_whas____d10 = INST_bram_serverAdapterA_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapterA_cnt_3_whas__3_THEN_bram_ETC___d23 = DEF_bram_serverAdapterA_cnt_3_whas____d13 ? DEF_b__h890 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h910 + (DEF_bram_serverAdapterA_cnt_1_whas____d10 ? DEF_b__h917 : (tUInt8)0u))) + (DEF_bram_serverAdapterA_cnt_2_whas____d11 ? DEF_b__h954 : (tUInt8)0u));
  INST_bram_serverAdapterA_cnt.METH_write(DEF_IF_bram_serverAdapterA_cnt_3_whas__3_THEN_bram_ETC___d23);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterA_s1__dreg_update()
{
  tUInt8 DEF_IF_bram_serverAdapterA_s1_1_whas__4_THEN_bram__ETC___d27;
  DEF__0_CONCAT_DONTCARE___d26 = (tUInt8)0u;
  DEF_IF_bram_serverAdapterA_s1_1_whas__4_THEN_bram__ETC___d27 = INST_bram_serverAdapterA_s1_1.METH_whas() ? INST_bram_serverAdapterA_s1_1.METH_wget() : DEF__0_CONCAT_DONTCARE___d26;
  INST_bram_serverAdapterA_s1.METH_write(DEF_IF_bram_serverAdapterA_s1_1_whas__4_THEN_bram__ETC___d27);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterA_stageReadResponseAlways()
{
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d34;
  tUInt8 DEF_NOT_bram_serverAdapterA_writeWithResp_wget__9__ETC___d33;
  tUInt8 DEF_bram_serverAdapterA_writeWithResp_wget____d29;
  DEF_bram_serverAdapterA_writeWithResp_wget____d29 = INST_bram_serverAdapterA_writeWithResp.METH_wget();
  DEF_NOT_bram_serverAdapterA_writeWithResp_wget__9__ETC___d33 = !((tUInt8)(DEF_bram_serverAdapterA_writeWithResp_wget____d29 >> 1u)) || (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterA_writeWithResp_wget____d29);
  DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d34 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapterA_writeWithResp_wget__9__ETC___d33);
  INST_bram_serverAdapterA_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapterA_writeWithResp_ETC___d34);
  if (DEF_NOT_bram_serverAdapterA_writeWithResp_wget__9__ETC___d33)
    INST_bram_serverAdapterA_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterA_moveToOutFIFO()
{
  tUInt32 DEF_v__h1485;
  DEF_v__h1485 = INST_bram_memory.METH_a_read();
  DEF_bram_serverAdapterA_s1___d35 = INST_bram_serverAdapterA_s1.METH_read();
  DEF_bram_serverAdapterA_s1_5_BIT_0___d36 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterA_s1___d35);
  if (DEF_bram_serverAdapterA_s1_5_BIT_0___d36)
    INST_bram_serverAdapterA_outData_enqw.METH_wset(DEF_v__h1485);
  if (DEF_bram_serverAdapterA_s1_5_BIT_0___d36)
    INST_bram_serverAdapterA_outData_beforeEnq.METH_write((tUInt8)1u);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterA_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_2);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_outData_enqueue()
{
  tUInt32 DEF_x__h1862;
  tUInt32 DEF_x_wget__h1764;
  DEF_x_wget__h1764 = INST_bram_serverAdapterB_outData_enqw.METH_wget();
  DEF_x__h1862 = DEF_x_wget__h1764;
  INST_bram_serverAdapterB_outData_ff.METH_enq(DEF_x__h1862);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_outData_dequeue()
{
  INST_bram_serverAdapterB_outData_ff.METH_deq();
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_cnt_finalAdd()
{
  tUInt8 DEF_IF_bram_serverAdapterB_cnt_3_whas__3_THEN_bram_ETC___d73;
  tUInt8 DEF_b__h2255;
  tUInt8 DEF_b__h2262;
  tUInt8 DEF_b__h2299;
  tUInt8 DEF_b__h2235;
  DEF_b__h2235 = INST_bram_serverAdapterB_cnt_3.METH_wget();
  DEF_b__h2299 = INST_bram_serverAdapterB_cnt_2.METH_wget();
  DEF_b__h2262 = INST_bram_serverAdapterB_cnt_1.METH_wget();
  DEF_b__h2255 = INST_bram_serverAdapterB_cnt.METH_read();
  DEF_bram_serverAdapterB_cnt_3_whas____d63 = INST_bram_serverAdapterB_cnt_3.METH_whas();
  DEF_bram_serverAdapterB_cnt_2_whas____d61 = INST_bram_serverAdapterB_cnt_2.METH_whas();
  DEF_bram_serverAdapterB_cnt_1_whas____d60 = INST_bram_serverAdapterB_cnt_1.METH_whas();
  DEF_IF_bram_serverAdapterB_cnt_3_whas__3_THEN_bram_ETC___d73 = DEF_bram_serverAdapterB_cnt_3_whas____d63 ? DEF_b__h2235 : (tUInt8)7u & (((tUInt8)7u & (DEF_b__h2255 + (DEF_bram_serverAdapterB_cnt_1_whas____d60 ? DEF_b__h2262 : (tUInt8)0u))) + (DEF_bram_serverAdapterB_cnt_2_whas____d61 ? DEF_b__h2299 : (tUInt8)0u));
  INST_bram_serverAdapterB_cnt.METH_write(DEF_IF_bram_serverAdapterB_cnt_3_whas__3_THEN_bram_ETC___d73);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_s1__dreg_update()
{
  tUInt8 DEF_IF_bram_serverAdapterB_s1_1_whas__4_THEN_bram__ETC___d76;
  DEF__0_CONCAT_DONTCARE___d26 = (tUInt8)0u;
  DEF_IF_bram_serverAdapterB_s1_1_whas__4_THEN_bram__ETC___d76 = INST_bram_serverAdapterB_s1_1.METH_whas() ? INST_bram_serverAdapterB_s1_1.METH_wget() : DEF__0_CONCAT_DONTCARE___d26;
  INST_bram_serverAdapterB_s1.METH_write(DEF_IF_bram_serverAdapterB_s1_1_whas__4_THEN_bram__ETC___d76);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_stageReadResponseAlways()
{
  tUInt8 DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d83;
  tUInt8 DEF_NOT_bram_serverAdapterB_writeWithResp_wget__8__ETC___d82;
  tUInt8 DEF_bram_serverAdapterB_writeWithResp_wget____d78;
  DEF_bram_serverAdapterB_writeWithResp_wget____d78 = INST_bram_serverAdapterB_writeWithResp.METH_wget();
  DEF_NOT_bram_serverAdapterB_writeWithResp_wget__8__ETC___d82 = !((tUInt8)(DEF_bram_serverAdapterB_writeWithResp_wget____d78 >> 1u)) || (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterB_writeWithResp_wget____d78);
  DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d83 = (tUInt8)3u & (((tUInt8)1u << 1u) | DEF_NOT_bram_serverAdapterB_writeWithResp_wget__8__ETC___d82);
  INST_bram_serverAdapterB_s1_1.METH_wset(DEF__1_CONCAT_NOT_bram_serverAdapterB_writeWithResp_ETC___d83);
  if (DEF_NOT_bram_serverAdapterB_writeWithResp_wget__8__ETC___d82)
    INST_bram_serverAdapterB_cnt_1.METH_wset((tUInt8)1u);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_moveToOutFIFO()
{
  tUInt32 DEF_v__h2825;
  DEF_v__h2825 = INST_bram_memory.METH_b_read();
  DEF_bram_serverAdapterB_s1___d84 = INST_bram_serverAdapterB_s1.METH_read();
  DEF_bram_serverAdapterB_s1_4_BIT_0___d85 = (tUInt8)((tUInt8)1u & DEF_bram_serverAdapterB_s1___d84);
  if (DEF_bram_serverAdapterB_s1_4_BIT_0___d85)
    INST_bram_serverAdapterB_outData_enqw.METH_wset(DEF_v__h2825);
  if (DEF_bram_serverAdapterB_s1_4_BIT_0___d85)
    INST_bram_serverAdapterB_outData_beforeEnq.METH_write((tUInt8)1u);
}

void MOD_mktop_pipelined::RL_bram_serverAdapterB_overRun()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_display(sim_hdl, this, "s", &__str_literal_2);
}

void MOD_mktop_pipelined::RL_tic()
{
  tUInt32 DEF_x__h3211;
  DEF__read__h3192 = INST_cycle_count.METH_read();
  DEF_x__h3211 = DEF__read__h3192 + 1u;
  INST_cycle_count.METH_write(DEF_x__h3211);
}

void MOD_mktop_pipelined::RL_requestI()
{
  tUWide DEF_AVMeth_rv_core_getIReq(68u, false);
  DEF_AVMeth_rv_core_getIReq = INST_rv_core.METH_getIReq();
  DEF_rv_core_getIReq___d105 = DEF_AVMeth_rv_core_getIReq;
  INST_ireq.METH_write(DEF_rv_core_getIReq___d105);
  INST_cache.METH_sendReqInstr(DEF_rv_core_getIReq___d105);
}

void MOD_mktop_pipelined::RL_responseI()
{
  tUInt32 DEF_x__h3390;
  tUInt32 DEF_AVMeth_cache_getRespInstr;
  DEF_ireq___d109 = INST_ireq.METH_read();
  DEF_AVMeth_cache_getRespInstr = INST_cache.METH_getRespInstr();
  DEF_x__h3390 = DEF_AVMeth_cache_getRespInstr;
  DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112.set_bits_in_word(DEF_ireq___d109.get_bits_in_word8(2u,
														   0u,
														   4u),
										 2u,
										 0u,
										 4u).build_concat((((tUInt64)(DEF_ireq___d109.get_whole_word(1u))) << 32u) | (tUInt64)(DEF_x__h3390),
												  0u,
												  64u);
  INST_rv_core.METH_getIResp(DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112);
}

void MOD_mktop_pipelined::RL_requestD()
{
  tUWide DEF_AVMeth_rv_core_getDReq(68u, false);
  DEF_AVMeth_rv_core_getDReq = INST_rv_core.METH_getDReq();
  DEF_rv_core_getDReq___d116 = DEF_AVMeth_rv_core_getDReq;
  INST_dreq.METH_write(DEF_rv_core_getDReq___d116);
  INST_cache.METH_sendReqData(DEF_rv_core_getDReq___d116);
}

void MOD_mktop_pipelined::RL_responseD()
{
  tUInt32 DEF_x__h3558;
  tUInt32 DEF_AVMeth_cache_getRespData;
  DEF_dreq___d120 = INST_dreq.METH_read();
  DEF_AVMeth_cache_getRespData = INST_cache.METH_getRespData();
  DEF_x__h3558 = DEF_AVMeth_cache_getRespData;
  DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123.set_bits_in_word(DEF_dreq___d120.get_bits_in_word8(2u,
														   0u,
														   4u),
										 2u,
										 0u,
										 4u).build_concat((((tUInt64)(DEF_dreq___d120.get_whole_word(1u))) << 32u) | (tUInt64)(DEF_x__h3558),
												  0u,
												  64u);
  INST_rv_core.METH_getDResp(DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123);
}

void MOD_mktop_pipelined::RL_requestMMIO()
{
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_67_TO_64_28_EQ_0xF__ETC___d132;
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d138;
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d140;
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d134;
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136;
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_31_TO_0_33_EQ_0___d137;
  tUInt8 DEF_rv_core_getMMIOReq_27_BITS_7_TO_0___d135;
  tUInt32 DEF_rv_core_getMMIOReq_27_BITS_31_TO_0___d133;
  tUInt32 DEF_x__h3644;
  tUWide DEF_AVMeth_rv_core_getMMIOReq(68u, false);
  DEF__read__h3192 = INST_cycle_count.METH_read();
  DEF_AVMeth_rv_core_getMMIOReq = INST_rv_core.METH_getMMIOReq();
  DEF_rv_core_getMMIOReq___d127 = DEF_AVMeth_rv_core_getMMIOReq;
  DEF_x__h3644 = DEF_rv_core_getMMIOReq___d127.get_whole_word(1u);
  DEF_rv_core_getMMIOReq_27_BITS_31_TO_0___d133 = DEF_rv_core_getMMIOReq___d127.get_whole_word(0u);
  DEF_rv_core_getMMIOReq_27_BITS_7_TO_0___d135 = DEF_rv_core_getMMIOReq___d127.get_bits_in_word8(0u,
												 0u,
												 8u);
  DEF_rv_core_getMMIOReq_27_BITS_31_TO_0_33_EQ_0___d137 = DEF_rv_core_getMMIOReq_27_BITS_31_TO_0___d133 == 0u;
  DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136 = DEF_x__h3644 == 4026597368u;
  DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d134 = DEF_x__h3644 == 4026597360u;
  DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d140 = DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136 && !DEF_rv_core_getMMIOReq_27_BITS_31_TO_0_33_EQ_0___d137;
  DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d138 = DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136 && DEF_rv_core_getMMIOReq_27_BITS_31_TO_0_33_EQ_0___d137;
  DEF_rv_core_getMMIOReq_27_BITS_67_TO_64_28_EQ_0xF__ETC___d132 = DEF_rv_core_getMMIOReq___d127.get_bits_in_word8(2u,
														  0u,
														  4u) == (tUInt8)15u && DEF_x__h3644 == 4026597364u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_rv_core_getMMIOReq_27_BITS_67_TO_64_28_EQ_0xF__ETC___d132)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,32",
		    2147483650u,
		    &__str_literal_3,
		    DEF_rv_core_getMMIOReq_27_BITS_31_TO_0___d133);
    if (DEF_rv_core_getMMIOReq_27_BITS_67_TO_64_28_EQ_0xF__ETC___d132)
      dollar_fflush("32", 2147483650u);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d134)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,8",
		    2147483650u,
		    &__str_literal_4,
		    DEF_rv_core_getMMIOReq_27_BITS_7_TO_0___d135);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d134)
      dollar_fflush("32", 2147483650u);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_5, DEF__read__h3192);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d138)
      dollar_fdisplay(sim_hdl, this, "32,s", 2147483650u, &__str_literal_6);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d140)
      dollar_fdisplay(sim_hdl,
		      this,
		      "32,s,32",
		      2147483650u,
		      &__str_literal_7,
		      DEF_rv_core_getMMIOReq_27_BITS_31_TO_0___d133);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136)
      dollar_fflush("32", 2147483650u);
    if (DEF_rv_core_getMMIOReq_27_BITS_63_TO_32_30_EQ_0xF0_ETC___d136)
      dollar_finish(sim_hdl, "32", 1u);
  }
  INST_mmioreq.METH_enq(DEF_rv_core_getMMIOReq___d127);
}

void MOD_mktop_pipelined::RL_responseMMIO()
{
  DEF_mmioreq_first____d144 = INST_mmioreq.METH_first();
  INST_mmioreq.METH_deq();
  INST_rv_core.METH_getMMIOResp(DEF_mmioreq_first____d144);
}


/* Methods */


/* Reset routines */

void MOD_mktop_pipelined::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_rv_core.reset_RST_N(ARG_rst_in);
  INST_mmioreq.reset_RST(ARG_rst_in);
  INST_cycle_count.reset_RST(ARG_rst_in);
  INST_cache.reset_RST_N(ARG_rst_in);
  INST_bram_serverAdapterB_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_outData_ff.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterB_cnt.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_s1.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_outData_ff.reset_RST(ARG_rst_in);
  INST_bram_serverAdapterA_cnt.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mktop_pipelined::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mktop_pipelined::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_bram_memory.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapterA_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_beforeDeq.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_beforeEnq.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_dequeueing.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_enqw.dump_state(indent + 2u);
  INST_bram_serverAdapterA_outData_ff.dump_state(indent + 2u);
  INST_bram_serverAdapterA_s1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapterA_writeWithResp.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_2.dump_state(indent + 2u);
  INST_bram_serverAdapterB_cnt_3.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_beforeDeq.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_beforeEnq.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_dequeueing.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_enqw.dump_state(indent + 2u);
  INST_bram_serverAdapterB_outData_ff.dump_state(indent + 2u);
  INST_bram_serverAdapterB_s1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_s1_1.dump_state(indent + 2u);
  INST_bram_serverAdapterB_writeWithResp.dump_state(indent + 2u);
  INST_cache.dump_state(indent + 2u);
  INST_cycle_count.dump_state(indent + 2u);
  INST_dreq.dump_state(indent + 2u);
  INST_ireq.dump_state(indent + 2u);
  INST_mmioreq.dump_state(indent + 2u);
  INST_rv_core.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mktop_pipelined::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 50u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d26", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h3192", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_1_whas____d10", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_2_whas____d11", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_cnt_3_whas____d13", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_s1_5_BIT_0___d36", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterA_s1___d35", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_1_whas____d60", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_2_whas____d61", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_cnt_3_whas____d63", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_s1_4_BIT_0___d85", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "bram_serverAdapterB_s1___d84", 2u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dreq___d120", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "ireq___d109", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mmioreq_first____d144", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rv_core_getDReq___d116", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rv_core_getIReq___d105", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rv_core_getMMIOReq___d127", 68u);
  num = INST_bram_memory.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_beforeDeq.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_beforeEnq.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_dequeueing.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_enqw.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_outData_ff.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterA_writeWithResp.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_2.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_cnt_3.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_beforeDeq.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_beforeEnq.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_dequeueing.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_enqw.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_outData_ff.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_s1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_s1_1.dump_VCD_defs(num);
  num = INST_bram_serverAdapterB_writeWithResp.dump_VCD_defs(num);
  num = INST_cycle_count.dump_VCD_defs(num);
  num = INST_dreq.dump_VCD_defs(num);
  num = INST_ireq.dump_VCD_defs(num);
  num = INST_mmioreq.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_cache.dump_VCD_defs(l);
    num = INST_rv_core.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mktop_pipelined::dump_VCD(tVCDDumpType dt,
				   unsigned int levels,
				   MOD_mktop_pipelined &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mktop_pipelined::vcd_defs(tVCDDumpType dt, MOD_mktop_pipelined &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 2u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d26) != DEF__0_CONCAT_DONTCARE___d26)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d26, 2u);
	backing.DEF__0_CONCAT_DONTCARE___d26 = DEF__0_CONCAT_DONTCARE___d26;
      }
      ++num;
      if ((backing.DEF__read__h3192) != DEF__read__h3192)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h3192, 32u);
	backing.DEF__read__h3192 = DEF__read__h3192;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_1_whas____d10) != DEF_bram_serverAdapterA_cnt_1_whas____d10)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_1_whas____d10, 1u);
	backing.DEF_bram_serverAdapterA_cnt_1_whas____d10 = DEF_bram_serverAdapterA_cnt_1_whas____d10;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_2_whas____d11) != DEF_bram_serverAdapterA_cnt_2_whas____d11)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_2_whas____d11, 1u);
	backing.DEF_bram_serverAdapterA_cnt_2_whas____d11 = DEF_bram_serverAdapterA_cnt_2_whas____d11;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_cnt_3_whas____d13) != DEF_bram_serverAdapterA_cnt_3_whas____d13)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_cnt_3_whas____d13, 1u);
	backing.DEF_bram_serverAdapterA_cnt_3_whas____d13 = DEF_bram_serverAdapterA_cnt_3_whas____d13;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_s1_5_BIT_0___d36) != DEF_bram_serverAdapterA_s1_5_BIT_0___d36)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_s1_5_BIT_0___d36, 1u);
	backing.DEF_bram_serverAdapterA_s1_5_BIT_0___d36 = DEF_bram_serverAdapterA_s1_5_BIT_0___d36;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterA_s1___d35) != DEF_bram_serverAdapterA_s1___d35)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterA_s1___d35, 2u);
	backing.DEF_bram_serverAdapterA_s1___d35 = DEF_bram_serverAdapterA_s1___d35;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_1_whas____d60) != DEF_bram_serverAdapterB_cnt_1_whas____d60)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_1_whas____d60, 1u);
	backing.DEF_bram_serverAdapterB_cnt_1_whas____d60 = DEF_bram_serverAdapterB_cnt_1_whas____d60;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_2_whas____d61) != DEF_bram_serverAdapterB_cnt_2_whas____d61)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_2_whas____d61, 1u);
	backing.DEF_bram_serverAdapterB_cnt_2_whas____d61 = DEF_bram_serverAdapterB_cnt_2_whas____d61;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_cnt_3_whas____d63) != DEF_bram_serverAdapterB_cnt_3_whas____d63)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_cnt_3_whas____d63, 1u);
	backing.DEF_bram_serverAdapterB_cnt_3_whas____d63 = DEF_bram_serverAdapterB_cnt_3_whas____d63;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_s1_4_BIT_0___d85) != DEF_bram_serverAdapterB_s1_4_BIT_0___d85)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_s1_4_BIT_0___d85, 1u);
	backing.DEF_bram_serverAdapterB_s1_4_BIT_0___d85 = DEF_bram_serverAdapterB_s1_4_BIT_0___d85;
      }
      ++num;
      if ((backing.DEF_bram_serverAdapterB_s1___d84) != DEF_bram_serverAdapterB_s1___d84)
      {
	vcd_write_val(sim_hdl, num, DEF_bram_serverAdapterB_s1___d84, 2u);
	backing.DEF_bram_serverAdapterB_s1___d84 = DEF_bram_serverAdapterB_s1___d84;
      }
      ++num;
      if ((backing.DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123) != DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123)
      {
	vcd_write_val(sim_hdl, num, DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123, 68u);
	backing.DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123 = DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123;
      }
      ++num;
      if ((backing.DEF_dreq___d120) != DEF_dreq___d120)
      {
	vcd_write_val(sim_hdl, num, DEF_dreq___d120, 68u);
	backing.DEF_dreq___d120 = DEF_dreq___d120;
      }
      ++num;
      if ((backing.DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112) != DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112)
      {
	vcd_write_val(sim_hdl, num, DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112, 68u);
	backing.DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112 = DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112;
      }
      ++num;
      if ((backing.DEF_ireq___d109) != DEF_ireq___d109)
      {
	vcd_write_val(sim_hdl, num, DEF_ireq___d109, 68u);
	backing.DEF_ireq___d109 = DEF_ireq___d109;
      }
      ++num;
      if ((backing.DEF_mmioreq_first____d144) != DEF_mmioreq_first____d144)
      {
	vcd_write_val(sim_hdl, num, DEF_mmioreq_first____d144, 68u);
	backing.DEF_mmioreq_first____d144 = DEF_mmioreq_first____d144;
      }
      ++num;
      if ((backing.DEF_rv_core_getDReq___d116) != DEF_rv_core_getDReq___d116)
      {
	vcd_write_val(sim_hdl, num, DEF_rv_core_getDReq___d116, 68u);
	backing.DEF_rv_core_getDReq___d116 = DEF_rv_core_getDReq___d116;
      }
      ++num;
      if ((backing.DEF_rv_core_getIReq___d105) != DEF_rv_core_getIReq___d105)
      {
	vcd_write_val(sim_hdl, num, DEF_rv_core_getIReq___d105, 68u);
	backing.DEF_rv_core_getIReq___d105 = DEF_rv_core_getIReq___d105;
      }
      ++num;
      if ((backing.DEF_rv_core_getMMIOReq___d127) != DEF_rv_core_getMMIOReq___d127)
      {
	vcd_write_val(sim_hdl, num, DEF_rv_core_getMMIOReq___d127, 68u);
	backing.DEF_rv_core_getMMIOReq___d127 = DEF_rv_core_getMMIOReq___d127;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d26, 2u);
      backing.DEF__0_CONCAT_DONTCARE___d26 = DEF__0_CONCAT_DONTCARE___d26;
      vcd_write_val(sim_hdl, num++, DEF__read__h3192, 32u);
      backing.DEF__read__h3192 = DEF__read__h3192;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_1_whas____d10, 1u);
      backing.DEF_bram_serverAdapterA_cnt_1_whas____d10 = DEF_bram_serverAdapterA_cnt_1_whas____d10;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_2_whas____d11, 1u);
      backing.DEF_bram_serverAdapterA_cnt_2_whas____d11 = DEF_bram_serverAdapterA_cnt_2_whas____d11;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_cnt_3_whas____d13, 1u);
      backing.DEF_bram_serverAdapterA_cnt_3_whas____d13 = DEF_bram_serverAdapterA_cnt_3_whas____d13;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_s1_5_BIT_0___d36, 1u);
      backing.DEF_bram_serverAdapterA_s1_5_BIT_0___d36 = DEF_bram_serverAdapterA_s1_5_BIT_0___d36;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterA_s1___d35, 2u);
      backing.DEF_bram_serverAdapterA_s1___d35 = DEF_bram_serverAdapterA_s1___d35;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_1_whas____d60, 1u);
      backing.DEF_bram_serverAdapterB_cnt_1_whas____d60 = DEF_bram_serverAdapterB_cnt_1_whas____d60;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_2_whas____d61, 1u);
      backing.DEF_bram_serverAdapterB_cnt_2_whas____d61 = DEF_bram_serverAdapterB_cnt_2_whas____d61;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_cnt_3_whas____d63, 1u);
      backing.DEF_bram_serverAdapterB_cnt_3_whas____d63 = DEF_bram_serverAdapterB_cnt_3_whas____d63;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_s1_4_BIT_0___d85, 1u);
      backing.DEF_bram_serverAdapterB_s1_4_BIT_0___d85 = DEF_bram_serverAdapterB_s1_4_BIT_0___d85;
      vcd_write_val(sim_hdl, num++, DEF_bram_serverAdapterB_s1___d84, 2u);
      backing.DEF_bram_serverAdapterB_s1___d84 = DEF_bram_serverAdapterB_s1___d84;
      vcd_write_val(sim_hdl, num++, DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123, 68u);
      backing.DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123 = DEF_dreq_20_BITS_67_TO_32_21_CONCAT_cache_getRespD_ETC___d123;
      vcd_write_val(sim_hdl, num++, DEF_dreq___d120, 68u);
      backing.DEF_dreq___d120 = DEF_dreq___d120;
      vcd_write_val(sim_hdl, num++, DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112, 68u);
      backing.DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112 = DEF_ireq_09_BITS_67_TO_32_10_CONCAT_cache_getRespI_ETC___d112;
      vcd_write_val(sim_hdl, num++, DEF_ireq___d109, 68u);
      backing.DEF_ireq___d109 = DEF_ireq___d109;
      vcd_write_val(sim_hdl, num++, DEF_mmioreq_first____d144, 68u);
      backing.DEF_mmioreq_first____d144 = DEF_mmioreq_first____d144;
      vcd_write_val(sim_hdl, num++, DEF_rv_core_getDReq___d116, 68u);
      backing.DEF_rv_core_getDReq___d116 = DEF_rv_core_getDReq___d116;
      vcd_write_val(sim_hdl, num++, DEF_rv_core_getIReq___d105, 68u);
      backing.DEF_rv_core_getIReq___d105 = DEF_rv_core_getIReq___d105;
      vcd_write_val(sim_hdl, num++, DEF_rv_core_getMMIOReq___d127, 68u);
      backing.DEF_rv_core_getMMIOReq___d127 = DEF_rv_core_getMMIOReq___d127;
    }
}

void MOD_mktop_pipelined::vcd_prims(tVCDDumpType dt, MOD_mktop_pipelined &backing)
{
  INST_bram_memory.dump_VCD(dt, backing.INST_bram_memory);
  INST_bram_serverAdapterA_cnt.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt);
  INST_bram_serverAdapterA_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_1);
  INST_bram_serverAdapterA_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_2);
  INST_bram_serverAdapterA_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapterA_cnt_3);
  INST_bram_serverAdapterA_outData_beforeDeq.dump_VCD(dt,
						      backing.INST_bram_serverAdapterA_outData_beforeDeq);
  INST_bram_serverAdapterA_outData_beforeEnq.dump_VCD(dt,
						      backing.INST_bram_serverAdapterA_outData_beforeEnq);
  INST_bram_serverAdapterA_outData_dequeueing.dump_VCD(dt,
						       backing.INST_bram_serverAdapterA_outData_dequeueing);
  INST_bram_serverAdapterA_outData_enqw.dump_VCD(dt, backing.INST_bram_serverAdapterA_outData_enqw);
  INST_bram_serverAdapterA_outData_ff.dump_VCD(dt, backing.INST_bram_serverAdapterA_outData_ff);
  INST_bram_serverAdapterA_s1.dump_VCD(dt, backing.INST_bram_serverAdapterA_s1);
  INST_bram_serverAdapterA_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapterA_s1_1);
  INST_bram_serverAdapterA_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapterA_writeWithResp);
  INST_bram_serverAdapterB_cnt.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt);
  INST_bram_serverAdapterB_cnt_1.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_1);
  INST_bram_serverAdapterB_cnt_2.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_2);
  INST_bram_serverAdapterB_cnt_3.dump_VCD(dt, backing.INST_bram_serverAdapterB_cnt_3);
  INST_bram_serverAdapterB_outData_beforeDeq.dump_VCD(dt,
						      backing.INST_bram_serverAdapterB_outData_beforeDeq);
  INST_bram_serverAdapterB_outData_beforeEnq.dump_VCD(dt,
						      backing.INST_bram_serverAdapterB_outData_beforeEnq);
  INST_bram_serverAdapterB_outData_dequeueing.dump_VCD(dt,
						       backing.INST_bram_serverAdapterB_outData_dequeueing);
  INST_bram_serverAdapterB_outData_enqw.dump_VCD(dt, backing.INST_bram_serverAdapterB_outData_enqw);
  INST_bram_serverAdapterB_outData_ff.dump_VCD(dt, backing.INST_bram_serverAdapterB_outData_ff);
  INST_bram_serverAdapterB_s1.dump_VCD(dt, backing.INST_bram_serverAdapterB_s1);
  INST_bram_serverAdapterB_s1_1.dump_VCD(dt, backing.INST_bram_serverAdapterB_s1_1);
  INST_bram_serverAdapterB_writeWithResp.dump_VCD(dt, backing.INST_bram_serverAdapterB_writeWithResp);
  INST_cycle_count.dump_VCD(dt, backing.INST_cycle_count);
  INST_dreq.dump_VCD(dt, backing.INST_dreq);
  INST_ireq.dump_VCD(dt, backing.INST_ireq);
  INST_mmioreq.dump_VCD(dt, backing.INST_mmioreq);
}

void MOD_mktop_pipelined::vcd_submodules(tVCDDumpType dt,
					 unsigned int levels,
					 MOD_mktop_pipelined &backing)
{
  INST_cache.dump_VCD(dt, levels, backing.INST_cache);
  INST_rv_core.dump_VCD(dt, levels, backing.INST_rv_core);
}
