/*
 * Generated by Bluespec Compiler, version 2023.07-33-g1c27a41e (build 1c27a41e)
 * 
 * On Sat May 11 09:54:47 EDT 2024
 * 
 */

/* Generation options: */
#ifndef __mkCache_h__
#define __mkCache_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkCache module */
class MOD_mkCache : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_bdata_memory;
  MOD_Reg<tUInt8> INST_bdata_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_bdata_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_bdata_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_bdata_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_bdata_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_bdata_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_bdata_serverAdapter_outData_dequeueing;
  MOD_Wire<tUWide> INST_bdata_serverAdapter_outData_enqw;
  MOD_Fifo<tUWide> INST_bdata_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_bdata_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_bdata_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_bdata_serverAdapter_writeWithResp;
  MOD_BRAM<tUInt8,tUInt8,tUInt8> INST_bstate_memory;
  MOD_Reg<tUInt8> INST_bstate_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_bstate_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_bstate_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_outData_dequeueing;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_outData_enqw;
  MOD_Fifo<tUInt8> INST_bstate_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_bstate_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_bstate_serverAdapter_writeWithResp;
  MOD_BRAM<tUInt8,tUInt32,tUInt8> INST_btag_memory;
  MOD_Reg<tUInt8> INST_btag_serverAdapter_cnt;
  MOD_Wire<tUInt8> INST_btag_serverAdapter_cnt_1;
  MOD_Wire<tUInt8> INST_btag_serverAdapter_cnt_2;
  MOD_Wire<tUInt8> INST_btag_serverAdapter_cnt_3;
  MOD_Reg<tUInt8> INST_btag_serverAdapter_outData_beforeDeq;
  MOD_Reg<tUInt8> INST_btag_serverAdapter_outData_beforeEnq;
  MOD_Wire<tUInt8> INST_btag_serverAdapter_outData_dequeueing;
  MOD_Wire<tUInt32> INST_btag_serverAdapter_outData_enqw;
  MOD_Fifo<tUInt32> INST_btag_serverAdapter_outData_ff;
  MOD_Reg<tUInt8> INST_btag_serverAdapter_s1;
  MOD_Wire<tUInt8> INST_btag_serverAdapter_s1_1;
  MOD_Wire<tUInt8> INST_btag_serverAdapter_writeWithResp;
  MOD_Fifo<tUWide> INST_curReq;
  MOD_Fifo<tUWide> INST_hitq;
  MOD_Fifo<tUWide> INST_memReq;
  MOD_Fifo<tUWide> INST_memResp;
  MOD_Reg<tUInt8> INST_state;
 
 /* Constructor */
 public:
  MOD_mkCache(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_putFromProc_e;
  tUWide PORT_putFromMem_e;
  tUWide PORT_getToProc;
  tUWide PORT_getToMem;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_curReq_first__59_BITS_537_TO_520_60_EQ_IF_btag_ETC___d163;
  tUInt8 DEF_curReq_first__59_BIT_538___d165;
  tUInt8 DEF_IF_bstate_serverAdapter_outData_ff_i_notEmpty__ETC___d155;
  tUInt8 DEF_NOT_IF_bstate_serverAdapter_outData_ff_i_notEm_ETC___d164;
  tUWide DEF_curReq_first____d159;
  tUInt32 DEF_x_wget__h2236;
  tUInt32 DEF_x_first__h2121;
  tUInt8 DEF_b__h4190;
  tUInt8 DEF_b__h2729;
  tUInt8 DEF_b__h1261;
  tUInt8 DEF_bdata_serverAdapter_s1___d132;
  tUInt8 DEF_btag_serverAdapter_s1___d83;
  tUInt8 DEF_bstate_serverAdapter_s1___d34;
  tUInt8 DEF_bstate_serverAdapter_outData_enqw_wget____d7;
  tUInt8 DEF_state__h4880;
  tUInt8 DEF_bdata_serverAdapter_cnt_3_whas____d111;
  tUInt8 DEF_bdata_serverAdapter_cnt_2_whas____d109;
  tUInt8 DEF_bdata_serverAdapter_cnt_1_whas____d108;
  tUInt8 DEF_bdata_serverAdapter_outData_ff_i_notEmpty____d102;
  tUInt8 DEF_btag_serverAdapter_cnt_3_whas____d62;
  tUInt8 DEF_btag_serverAdapter_cnt_2_whas____d60;
  tUInt8 DEF_btag_serverAdapter_cnt_1_whas____d59;
  tUInt8 DEF_btag_serverAdapter_outData_ff_i_notEmpty____d53;
  tUInt8 DEF_bstate_serverAdapter_cnt_3_whas____d12;
  tUInt8 DEF_bstate_serverAdapter_cnt_2_whas____d10;
  tUInt8 DEF_bstate_serverAdapter_cnt_1_whas____d9;
  tUInt8 DEF_bstate_serverAdapter_outData_ff_i_notEmpty____d4;
  tUInt32 DEF_x3__h5946;
  tUInt8 DEF_bdata_serverAdapter_s1_32_BIT_0___d133;
  tUInt8 DEF_btag_serverAdapter_s1_3_BIT_0___d84;
  tUInt8 DEF_bstate_serverAdapter_s1_4_BIT_0___d35;
  tUInt8 DEF_IF_bstate_serverAdapter_outData_ff_i_notEmpty__ETC___d176;
  tUInt32 DEF_v__h5000;
  tUInt32 DEF_x__h2334;
  tUInt8 DEF_IF_bstate_serverAdapter_outData_ff_i_notEmpty__ETC___d156;
  tUInt8 DEF_NOT_curReq_first__59_BIT_538_65___d166;
  tUInt8 DEF_btag_serverAdapter_cnt_5_SLT_3___d211;
  tUInt8 DEF_bdata_serverAdapter_cnt_14_SLT_3___d168;
  tUInt8 DEF_bstate_serverAdapter_cnt_5_SLT_3___d167;
 
 /* Local definitions */
 private:
  tUWide DEF_x_wget__h3697;
  tUWide DEF_x_first__h3582;
  tUWide DEF_v__h4760;
  tUWide DEF_x3__h6190;
  tUWide DEF_curReq_first__59_BITS_537_TO_0___d203;
  tUWide DEF_x3__h5460;
  tUInt8 DEF_x2__h5372;
  tUWide DEF_IF_IF_bstate_serverAdapter_outData_ff_i_notEmp_ETC___d204;
  tUWide DEF_IF_btag_serverAdapter_outData_ff_i_notEmpty__3_ETC___d202;
  tUWide DEF_v__h5104;
  tUWide DEF_x__h3795;
  tUInt8 DEF__0_CONCAT_DONTCARE___d25;
  tUWide DEF__0_CONCAT_curReq_first__59_BITS_537_TO_0_03___d209;
  tUWide DEF_IF_bstate_serverAdapter_outData_ff_i_notEmpty__ETC___d205;
  tUWide DEF_getToMem__avValue2;
  tUWide DEF_getToProc__avValue1;
 
 /* Rules */
 public:
  void RL_bstate_serverAdapter_outData_enqueue();
  void RL_bstate_serverAdapter_outData_dequeue();
  void RL_bstate_serverAdapter_cnt_finalAdd();
  void RL_bstate_serverAdapter_s1__dreg_update();
  void RL_bstate_serverAdapter_stageReadResponseAlways();
  void RL_bstate_serverAdapter_moveToOutFIFO();
  void RL_bstate_serverAdapter_overRun();
  void RL_btag_serverAdapter_outData_enqueue();
  void RL_btag_serverAdapter_outData_dequeue();
  void RL_btag_serverAdapter_cnt_finalAdd();
  void RL_btag_serverAdapter_s1__dreg_update();
  void RL_btag_serverAdapter_stageReadResponseAlways();
  void RL_btag_serverAdapter_moveToOutFIFO();
  void RL_btag_serverAdapter_overRun();
  void RL_bdata_serverAdapter_outData_enqueue();
  void RL_bdata_serverAdapter_outData_dequeue();
  void RL_bdata_serverAdapter_cnt_finalAdd();
  void RL_bdata_serverAdapter_s1__dreg_update();
  void RL_bdata_serverAdapter_stageReadResponseAlways();
  void RL_bdata_serverAdapter_moveToOutFIFO();
  void RL_bdata_serverAdapter_overRun();
  void RL_checkHitMiss();
  void RL_sendMemoryRequest();
  void RL_readMemoryRequest();
 
 /* Methods */
 public:
  void METH_putFromProc(tUWide ARG_putFromProc_e);
  tUInt8 METH_RDY_putFromProc();
  tUWide METH_getToProc();
  tUInt8 METH_RDY_getToProc();
  tUWide METH_getToMem();
  tUInt8 METH_RDY_getToMem();
  void METH_putFromMem(tUWide ARG_putFromMem_e);
  tUInt8 METH_RDY_putFromMem();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkCache &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkCache &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkCache &backing);
};

#endif /* ifndef __mkCache_h__ */
